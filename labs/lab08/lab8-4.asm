%include 'in_out.asm'

SECTION .data
    msg db "Результат:", 0
    msg1 db "Функция: f(x) = 2x + 15", 0

SECTION .text
    global _start

_start:
    ; Извлекаем из стека количество аргументов (первое значение в стеке)
    pop ecx

    ; Извлекаем из стека имя программы (второе значение в стеке)
    pop edx

    ; Уменьшаем ecx на 1 (количество аргументов без названия программы)
    sub ecx, 1

    ; Инициализируем esi для хранения промежуточных сумм
    mov esi, 0

next:
    ; Проверяем, есть ли еще аргументы
    cmp ecx, 0h
    jz _end          ; Если аргументов нет, выходим из цикла (переход на метку _end)

    ; Иначе извлекаем следующий аргумент из стека
    pop eax
    call atoi        ; Преобразуем символ в число

    ; Применяем функцию f(x) = 2x + 15
    mov ebx, 2
    mul ebx          ; Умножаем eax на 2
    add eax, 15      ; Добавляем 15 к eax

    ; Добавляем результат к промежуточной сумме
    add esi, eax

    ; Переход к обработке следующего аргумента
    loop next

_end:
    ; Вывод функции "Функция: f(x) = 2x + 15"
    mov eax, msg1
    call sprintLF

    ; Вывод сообщения "Результат:"
    mov eax, msg
    call sprint

    ; Печать результата
    mov eax, esi
    call iprintLF

    ; Завершение программы
    call quit
